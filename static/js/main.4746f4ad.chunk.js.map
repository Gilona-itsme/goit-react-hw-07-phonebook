{"version":3,"sources":["components/FormContact/FormContact.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/UI/Container/Container.module.css","components/UI/Section/Section.module.css","components/Filter/Filter.module.css","styles/PhoneBook.module.css","components/UI/Button/Button.module.css","redux/contactsActions.js","redux/contactsOperations.js","redux/contactsSelectors.js","components/UI/Section/Section.jsx","components/UI/Button/Button.jsx","components/FormContact/FormContact.js","components/ContactItem/ContactItem.jsx","components/CounterContacts/CounterContacts.js","components/ContactList/ContactList.jsx","components/ContactList/ContactList.container.js","components/Filter/Filter.jsx","Views/PhoneBookView.js","routes.js","components/UI/Container/Container.jsx","components/App.js","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","getContactRequest","createAction","getContactSuccess","getContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getIsLoading","state","contacts","getFilter","filter","getContacts","items","getContactsLength","length","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","name","includes","Section","title","children","className","s","PrimeryButton","restProps","classList","style","button","join","INITIAL_STATE","phone","FormContact","loginInput","uuidv4","handleChange","e","target","value","setState","handleSubmit","preventDefault","console","log","props","find","toast","error","onSubmit","id","resertForm","this","form","label","htmlFor","input","type","onChange","placeholder","Component","connect","dispatch","item","post","then","data","catch","contactsOperations","ContactItem","onRemove","contact","onClick","total","itemMovie","enter","enterActive","exit","exitActive","ContactList","TransitionGroup","component","in","list","map","CSSTransition","timeout","classNames","unmountOnExit","contactId","delete","onChangeFilter","event","PhoneBookView","fetchContacts","position","isLoadingContacts","get","routes","path","exact","Container","container","appear","App","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4746f4ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1jCo9\",\"label\":\"FormContact_label__2G6P3\",\"input\":\"FormContact_input__2P_BQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"enter\":\"ContactList_enter__1Tfxs\",\"enterActive\":\"ContactList_enterActive__BPn6N\",\"exit\":\"ContactList_exit__3MW4R\",\"exitActive\":\"ContactList_exitActive__ZA3FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__1siMh\",\"item\":\"ContactItem_item__2KdFa\",\"contact\":\"ContactItem_contact__3ZUAd\",\"name\":\"ContactItem_name__1bT_p\",\"phone\":\"ContactItem_phone__3a5jG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__177zK\",\"appear\":\"Container_appear__iWv-D\",\"appearActive\":\"Container_appearActive__3sU0I\",\"enter\":\"Container_enter__26ZAu\",\"enterActive\":\"Container_enterActive__2Bn39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2FiEL\",\"title\":\"Section_title__gx5AP\",\"appear\":\"Section_appear__3blUB\",\"appearActive\":\"Section_appearActive__2urUn\",\"enter\":\"Section_enter__3r8ZP\",\"enterActive\":\"Section_enterActive__2bQn_\",\"exit\":\"Section_exit__2oimq\",\"exitActive\":\"Section_exitActive__2F1-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PhoneBook_appear__1lXR1\",\"appearActive\":\"PhoneBook_appearActive__3E3u6\",\"enter\":\"PhoneBook_enter__1s6h1\",\"enterActive\":\"PhoneBook_enterActive__iOUb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2lgkF\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const getContactRequest = createAction('contacts/getContactRequest');\nexport const getContactSuccess = createAction('contacts/getContactSuccess');\nexport const getContactError = createAction('contacts/getContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from './contactsActions';\n\n// http: axios.defaults.baseURL = 'http://192.168.31.66:4040';\n// \"api-server\": \"json-server --host 192.168.31.66 --port 4040 --watch db.json\"\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(getContactRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(getContactSuccess(data)))\n    .catch(error => dispatch(getContactError(error)));\n};\n\nexport const addContact = ({ name, phone }) => dispatch => {\n  const item = {\n    name,\n    phone,\n  };\n\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', item)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\n//export default { addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsLoading = state => state.contacts.getIsLoading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getContactsLength = state => {\n  const contacts = getContacts(state);\n  return contacts.length;\n};\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//import {CSSTransition} from 'react-transition-group'\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={s.Section}>\n    <h2 className={s.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\n\nimport style from \"./Button.module.css\";\n\nconst PrimeryButton = ({ children, className, ...restProps }) => {\n  const classList = [className, style.button].join(\" \");\n  return (\n    <button className={classList} {...restProps} >\n      {children}\n    </button>\n  );\n};\n\nexport default PrimeryButton;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\n\nimport { getContacts } from '../../redux';\nimport * as contactsOperations from '../../redux';\n\nimport s from './FormContact.module.css';\nimport PrimeryButton from '../UI/Button';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\nclass FormContact extends Component {\n  state = INITIAL_STATE;\n\n  loginInput = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n\n    if (name === '') {\n      toast.error('Please enter name');\n      return;\n    }\n\n    if (phone === '') {\n      toast.error('Please enter phone');\n      return;\n    }\n    console.log(this.props.contacts);\n    console.log(this.props.contacts.items);\n\n    if (this.props.contacts.find(items => items.name === name)) {\n      toast.error(`${name} is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit({ id: uuidv4(), name, phone });\n    this.resertForm();\n  };\n\n  resertForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.loginInput}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleChange}\n            placeholder=\"Enter name, please\"\n            id={this.loginInput}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.loginInput}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={phone}\n            name=\"phone\"\n            onChange={this.handleChange}\n            placeholder=\"Enter phone, please\"\n          />\n        </label>\n        <PrimeryButton type=\"submit\">Add Contact</PrimeryButton>\n      </form>\n    );\n  }\n}\n\nFormContact.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.number,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getContacts(state),\n});\n\nconst mapDispatchProps = dispatch => ({\n  onSubmit: ({ name, phone }) =>\n    dispatch(contactsOperations.addContact({ name, phone })),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(FormContact);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PrimeryButton from \"../UI/Button\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ name, phone, onRemove }) => {\n  return (\n    <li className={s.item}>\n      <p className={s.contact}>\n        <span className={s.name}>{name}</span>:\n        <span className={s.phone}>{phone}</span>\n        <PrimeryButton className={s.button} type=\"button\" onClick={onRemove} >\n          Delete\n        </PrimeryButton>\n      </p>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getContactsLength } from '../../redux';\n\nconst CounterContacts = ({ total }) => (\n  <div>\n    <p>\n      <span>Total {total} contacts</span>\n    </p>\n  </div>\n);\n\nCounterContacts.propTypes = {\n  total: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  total: getContactsLength(state),\n});\n\nexport default connect(mapStateToProps)(CounterContacts);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport s from \"./ContactList.module.css\";\n\nimport ContactItem from \"../ContactItem\";\nimport CounterContacts from '../CounterContacts';\n\nconst itemMovie = {\n  enter: s.enter,\n  enterActive: s.enterActive,\n  exit: s.exit,\n  exitActive: s.exitActive,\n};\n\nconst ContactList = ({ contacts,  onRemove, total }) => {\n\n  return (\n    <TransitionGroup component=\"ul\" in=\"true\" className={s.list}>\n <CounterContacts total={total} />\n      {contacts &&\n        (contacts.map(({ id, name, phone }) => (\n          <CSSTransition\n            key={id}\n            in={contacts.length > 0}\n            timeout={250}\n            classNames={itemMovie}\n            unmountOnExit\n          >\n            <ContactItem\n              name={name}\n              phone={phone}\n              onRemove={() => onRemove(id)}\n            />\n          </CSSTransition>\n        )))}\n       \n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        phone: PropTypes.number.isRequired,\n      })\n    ),\n    PropTypes.array,\n  ]),\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactList","import { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/contactsOperations';\nimport { changeFilter } from '../../redux/contactsActions';\nimport ContactList from './ContactList';\nimport { getVisibleContacts } from '../../redux/contactsSelectors';\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchProps = dispatch => ({\n  onRemove: id => dispatch(deleteContact(id)),\n  onChangeFilter: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { changeFilter } from '../../redux';\nimport { getFilter } from '../../redux';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={s.filter}>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n        name=\"filter\"\n        placeholder=\"Enter name for Search\"\n      ></input>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchProps = dispatch => ({\n  onChangeFilter: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(Filter);\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { ToastContainer } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport * as contactsOperations from '../redux';\nimport { getIsLoading } from '../redux';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from '../styles/PhoneBook.module.css';\n\nimport Section from '../components/UI/Section';\nimport FormContact from '../components/FormContact';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nclass PhoneBookView extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n  render() {\n    return (\n      <>\n        <ToastContainer position=\"top-right\" />\n        <Section title=\"Add new contact\">\n          <FormContact />\n        </Section>\n\n        <CSSTransition in timeout={500} classNames={style} unmountOnExit>\n          <Section title=\"Find contact by name\">\n            <Filter />\n          </Section>\n        </CSSTransition>\n\n        <Section title=\"Contacts\">\n          {this.props.isLoadingContacts && <h1>...is loading</h1>}\n          <ContactList />\n        </Section>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: getIsLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookView);\n","import PhoneBookView from './Views/PhoneBookView';\n\nconst routes = [\n  {\n    path: '/',\n    label: 'contacts',\n    exact: true,\n    component: PhoneBookView,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport style from \"./Container.module.css\";\n\nconst Container = ({ title, children }) => {\n  return (\n    <div className={style.container}>\n      <CSSTransition\n        in={true}\n        appear\n        timeout={500}\n        classNames={style}\n        unmountOnExit>\n        <h2 className={style.title}>{title}</h2>\n      </CSSTransition>\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport routes from '../routes';\nimport PhoneBookView from '../Views/PhoneBookView';\n\nimport Container from './UI/Container';\n// import AppBar from './AppBar';\n\nconst App = () => {\n  return (\n    <Container title=\"Phonebook\">\n      {/* <AppBar /> */}\n\n      <Switch>\n        {/* {routes.map((route) => (\n        <Route key={route.path} {...route} />\n      ))} */}\n\n        <Route path={routes.contacts}>\n          <PhoneBookView />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactError,\n  deleteContactRequest,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n  changeFilter,\n} from './contactsActions';\n\nconst items = createReducer([], {\n  [getContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [getContactRequest]: () => true,\n  [getContactSuccess]: () => false,\n  [getContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter, loading });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport contactsReducer from './contactsReducer';\nimport logger from 'redux-logger';\n\n//console.log(process.env.NODE_ENV)\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n//const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}